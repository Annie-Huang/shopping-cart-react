// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserList presentation should render UserList component when a user selected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserList
    buttonDisable={true}
    loadUser={[MockFunction]}
    products={
      Array [
        Object {
          "id": "classic",
          "name": "Classic Ad",
          "price": 269.99,
        },
        Object {
          "id": "standout",
          "name": "Standout Ad",
          "price": 322.99,
        },
        Object {
          "id": "premium",
          "name": "Premium Ad",
          "price": 394.99,
        },
      ]
    }
    user={
      Object {
        "id": "Apple",
        "name": "Apple",
        "pricingRules": Array [
          Object {
            "attributes": Array [
              Object {
                "name": "newPrice",
                "value": 299.99,
              },
            ],
            "productId": "standout",
            "ruleName": "newUnitPrice",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        <div
          className="row"
        >
          <div
            className="col-md-5"
          >
            <div
              className="d-flex flex-row justify-content-between my-flex-container"
            >
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Apple"
              >
                Apple
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Ford"
              >
                Ford
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Nike"
              >
                Nike
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Unilever"
              >
                Unilever
              </button>
              <button
                className="btn btn-outline-danger"
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </div>
          </div>
        </div>,
        <br />,
        <div>
          <div
            className="row"
          >
            <div
              className="col-md-12"
            >
              <h2>
                Welcome 
                Apple
                , please pick your Ad from our wonderful selection...
              </h2>
            </div>
          </div>
          <PriceRuleList
            products={
              Array [
                Object {
                  "id": "classic",
                  "name": "Classic Ad",
                  "price": 269.99,
                },
                Object {
                  "id": "standout",
                  "name": "Standout Ad",
                  "price": 322.99,
                },
                Object {
                  "id": "premium",
                  "name": "Premium Ad",
                  "price": 394.99,
                },
              ]
            }
            rules={
              Array [
                Object {
                  "attributes": Array [
                    Object {
                      "name": "newPrice",
                      "value": 299.99,
                    },
                  ],
                  "productId": "standout",
                  "ruleName": "newUnitPrice",
                },
              ]
            }
          />
        </div>,
        <br />,
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col-md-5"
          >
            <div
              className="d-flex flex-row justify-content-between my-flex-container"
            >
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Apple"
              >
                Apple
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Ford"
              >
                Ford
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Nike"
              >
                Nike
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Unilever"
              >
                Unilever
              </button>
              <button
                className="btn btn-outline-danger"
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </div>
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="d-flex flex-row justify-content-between my-flex-container"
            >
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Apple"
              >
                Apple
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Ford"
              >
                Ford
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Nike"
              >
                Nike
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={true}
                onClick={[Function]}
                type="button"
                value="Unilever"
              >
                Unilever
              </button>
              <button
                className="btn btn-outline-danger"
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </div>,
            "className": "col-md-5",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                Array [
                  <button
                    className="btn btn-outline-primary"
                    disabled={true}
                    onClick={[Function]}
                    type="button"
                    value="Apple"
                  >
                    Apple
                  </button>,
                  <button
                    className="btn btn-outline-primary"
                    disabled={true}
                    onClick={[Function]}
                    type="button"
                    value="Ford"
                  >
                    Ford
                  </button>,
                  <button
                    className="btn btn-outline-primary"
                    disabled={true}
                    onClick={[Function]}
                    type="button"
                    value="Nike"
                  >
                    Nike
                  </button>,
                  <button
                    className="btn btn-outline-primary"
                    disabled={true}
                    onClick={[Function]}
                    type="button"
                    value="Unilever"
                  >
                    Unilever
                  </button>,
                ],
                <button
                  className="btn btn-outline-danger"
                  onClick={[Function]}
                  type="button"
                >
                  Reset
                </button>,
              ],
              "className": "d-flex flex-row justify-content-between my-flex-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "Apple",
                "nodeType": "host",
                "props": Object {
                  "children": "Apple",
                  "className": "btn btn-outline-primary",
                  "disabled": true,
                  "onClick": [Function],
                  "type": "button",
                  "value": "Apple",
                },
                "ref": null,
                "rendered": "Apple",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": "Ford",
                "nodeType": "host",
                "props": Object {
                  "children": "Ford",
                  "className": "btn btn-outline-primary",
                  "disabled": true,
                  "onClick": [Function],
                  "type": "button",
                  "value": "Ford",
                },
                "ref": null,
                "rendered": "Ford",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": "Nike",
                "nodeType": "host",
                "props": Object {
                  "children": "Nike",
                  "className": "btn btn-outline-primary",
                  "disabled": true,
                  "onClick": [Function],
                  "type": "button",
                  "value": "Nike",
                },
                "ref": null,
                "rendered": "Nike",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": "Unilever",
                "nodeType": "host",
                "props": Object {
                  "children": "Unilever",
                  "className": "btn btn-outline-primary",
                  "disabled": true,
                  "onClick": [Function],
                  "type": "button",
                  "value": "Unilever",
                },
                "ref": null,
                "rendered": "Unilever",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Reset",
                  "className": "btn btn-outline-danger",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": "Reset",
                "type": "button",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="row"
            >
              <div
                className="col-md-12"
              >
                <h2>
                  Welcome 
                  Apple
                  , please pick your Ad from our wonderful selection...
                </h2>
              </div>
            </div>,
            <PriceRuleList
              products={
                Array [
                  Object {
                    "id": "classic",
                    "name": "Classic Ad",
                    "price": 269.99,
                  },
                  Object {
                    "id": "standout",
                    "name": "Standout Ad",
                    "price": 322.99,
                  },
                  Object {
                    "id": "premium",
                    "name": "Premium Ad",
                    "price": 394.99,
                  },
                ]
              }
              rules={
                Array [
                  Object {
                    "attributes": Array [
                      Object {
                        "name": "newPrice",
                        "value": 299.99,
                      },
                    ],
                    "productId": "standout",
                    "ruleName": "newUnitPrice",
                  },
                ]
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-md-12"
              >
                <h2>
                  Welcome 
                  Apple
                  , please pick your Ad from our wonderful selection...
                </h2>
              </div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h2>
                  Welcome 
                  Apple
                  , please pick your Ad from our wonderful selection...
                </h2>,
                "className": "col-md-12",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Welcome ",
                    "Apple",
                    ", please pick your Ad from our wonderful selection...",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Welcome ",
                  "Apple",
                  ", please pick your Ad from our wonderful selection...",
                ],
                "type": "h2",
              },
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "products": Array [
                Object {
                  "id": "classic",
                  "name": "Classic Ad",
                  "price": 269.99,
                },
                Object {
                  "id": "standout",
                  "name": "Standout Ad",
                  "price": 322.99,
                },
                Object {
                  "id": "premium",
                  "name": "Premium Ad",
                  "price": 394.99,
                },
              ],
              "rules": Array [
                Object {
                  "attributes": Array [
                    Object {
                      "name": "newPrice",
                      "value": 299.99,
                    },
                  ],
                  "productId": "standout",
                  "ruleName": "newUnitPrice",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          <div
            className="row"
          >
            <div
              className="col-md-5"
            >
              <div
                className="d-flex flex-row justify-content-between my-flex-container"
              >
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Apple"
                >
                  Apple
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Ford"
                >
                  Ford
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Nike"
                >
                  Nike
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Unilever"
                >
                  Unilever
                </button>
                <button
                  className="btn btn-outline-danger"
                  onClick={[Function]}
                  type="button"
                >
                  Reset
                </button>
              </div>
            </div>
          </div>,
          <br />,
          <div>
            <div
              className="row"
            >
              <div
                className="col-md-12"
              >
                <h2>
                  Welcome 
                  Apple
                  , please pick your Ad from our wonderful selection...
                </h2>
              </div>
            </div>
            <PriceRuleList
              products={
                Array [
                  Object {
                    "id": "classic",
                    "name": "Classic Ad",
                    "price": 269.99,
                  },
                  Object {
                    "id": "standout",
                    "name": "Standout Ad",
                    "price": 322.99,
                  },
                  Object {
                    "id": "premium",
                    "name": "Premium Ad",
                    "price": 394.99,
                  },
                ]
              }
              rules={
                Array [
                  Object {
                    "attributes": Array [
                      Object {
                        "name": "newPrice",
                        "value": 299.99,
                      },
                    ],
                    "productId": "standout",
                    "ruleName": "newUnitPrice",
                  },
                ]
              }
            />
          </div>,
          <br />,
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-md-5"
            >
              <div
                className="d-flex flex-row justify-content-between my-flex-container"
              >
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Apple"
                >
                  Apple
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Ford"
                >
                  Ford
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Nike"
                >
                  Nike
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Unilever"
                >
                  Unilever
                </button>
                <button
                  className="btn btn-outline-danger"
                  onClick={[Function]}
                  type="button"
                >
                  Reset
                </button>
              </div>
            </div>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="d-flex flex-row justify-content-between my-flex-container"
              >
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Apple"
                >
                  Apple
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Ford"
                >
                  Ford
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Nike"
                >
                  Nike
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={true}
                  onClick={[Function]}
                  type="button"
                  value="Unilever"
                >
                  Unilever
                </button>
                <button
                  className="btn btn-outline-danger"
                  onClick={[Function]}
                  type="button"
                >
                  Reset
                </button>
              </div>,
              "className": "col-md-5",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  Array [
                    <button
                      className="btn btn-outline-primary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                      value="Apple"
                    >
                      Apple
                    </button>,
                    <button
                      className="btn btn-outline-primary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                      value="Ford"
                    >
                      Ford
                    </button>,
                    <button
                      className="btn btn-outline-primary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                      value="Nike"
                    >
                      Nike
                    </button>,
                    <button
                      className="btn btn-outline-primary"
                      disabled={true}
                      onClick={[Function]}
                      type="button"
                      value="Unilever"
                    >
                      Unilever
                    </button>,
                  ],
                  <button
                    className="btn btn-outline-danger"
                    onClick={[Function]}
                    type="button"
                  >
                    Reset
                  </button>,
                ],
                "className": "d-flex flex-row justify-content-between my-flex-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "Apple",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Apple",
                    "className": "btn btn-outline-primary",
                    "disabled": true,
                    "onClick": [Function],
                    "type": "button",
                    "value": "Apple",
                  },
                  "ref": null,
                  "rendered": "Apple",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": "Ford",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Ford",
                    "className": "btn btn-outline-primary",
                    "disabled": true,
                    "onClick": [Function],
                    "type": "button",
                    "value": "Ford",
                  },
                  "ref": null,
                  "rendered": "Ford",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": "Nike",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Nike",
                    "className": "btn btn-outline-primary",
                    "disabled": true,
                    "onClick": [Function],
                    "type": "button",
                    "value": "Nike",
                  },
                  "ref": null,
                  "rendered": "Nike",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": "Unilever",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Unilever",
                    "className": "btn btn-outline-primary",
                    "disabled": true,
                    "onClick": [Function],
                    "type": "button",
                    "value": "Unilever",
                  },
                  "ref": null,
                  "rendered": "Unilever",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Reset",
                    "className": "btn btn-outline-danger",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Reset",
                  "type": "button",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="col-md-12"
                >
                  <h2>
                    Welcome 
                    Apple
                    , please pick your Ad from our wonderful selection...
                  </h2>
                </div>
              </div>,
              <PriceRuleList
                products={
                  Array [
                    Object {
                      "id": "classic",
                      "name": "Classic Ad",
                      "price": 269.99,
                    },
                    Object {
                      "id": "standout",
                      "name": "Standout Ad",
                      "price": 322.99,
                    },
                    Object {
                      "id": "premium",
                      "name": "Premium Ad",
                      "price": 394.99,
                    },
                  ]
                }
                rules={
                  Array [
                    Object {
                      "attributes": Array [
                        Object {
                          "name": "newPrice",
                          "value": 299.99,
                        },
                      ],
                      "productId": "standout",
                      "ruleName": "newUnitPrice",
                    },
                  ]
                }
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="col-md-12"
                >
                  <h2>
                    Welcome 
                    Apple
                    , please pick your Ad from our wonderful selection...
                  </h2>
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <h2>
                    Welcome 
                    Apple
                    , please pick your Ad from our wonderful selection...
                  </h2>,
                  "className": "col-md-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Welcome ",
                      "Apple",
                      ", please pick your Ad from our wonderful selection...",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Welcome ",
                    "Apple",
                    ", please pick your Ad from our wonderful selection...",
                  ],
                  "type": "h2",
                },
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "products": Array [
                  Object {
                    "id": "classic",
                    "name": "Classic Ad",
                    "price": 269.99,
                  },
                  Object {
                    "id": "standout",
                    "name": "Standout Ad",
                    "price": 322.99,
                  },
                  Object {
                    "id": "premium",
                    "name": "Premium Ad",
                    "price": 394.99,
                  },
                ],
                "rules": Array [
                  Object {
                    "attributes": Array [
                      Object {
                        "name": "newPrice",
                        "value": 299.99,
                      },
                    ],
                    "productId": "standout",
                    "ruleName": "newUnitPrice",
                  },
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`UserList presentation should render UserList component when no user selected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserList
    buttonDisable={false}
    loadUser={[MockFunction]}
    products={
      Array [
        Object {
          "id": "classic",
          "name": "Classic Ad",
          "price": 269.99,
        },
        Object {
          "id": "standout",
          "name": "Standout Ad",
          "price": 322.99,
        },
        Object {
          "id": "premium",
          "name": "Premium Ad",
          "price": 394.99,
        },
      ]
    }
    user={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Please select a user
        </h2>,
        <div
          className="row"
        >
          <div
            className="col-md-5"
          >
            <div
              className="d-flex flex-row justify-content-between my-flex-container"
            >
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Apple"
              >
                Apple
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Ford"
              >
                Ford
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Nike"
              >
                Nike
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Unilever"
              >
                Unilever
              </button>
              <button
                className="btn btn-outline-danger"
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </div>
          </div>
        </div>,
        <br />,
        undefined,
        <br />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Please select a user",
        },
        "ref": null,
        "rendered": "Please select a user",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col-md-5"
          >
            <div
              className="d-flex flex-row justify-content-between my-flex-container"
            >
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Apple"
              >
                Apple
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Ford"
              >
                Ford
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Nike"
              >
                Nike
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Unilever"
              >
                Unilever
              </button>
              <button
                className="btn btn-outline-danger"
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </div>
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="d-flex flex-row justify-content-between my-flex-container"
            >
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Apple"
              >
                Apple
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Ford"
              >
                Ford
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Nike"
              >
                Nike
              </button>
              <button
                className="btn btn-outline-primary"
                disabled={false}
                onClick={[Function]}
                type="button"
                value="Unilever"
              >
                Unilever
              </button>
              <button
                className="btn btn-outline-danger"
                onClick={[Function]}
                type="button"
              >
                Reset
              </button>
            </div>,
            "className": "col-md-5",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                Array [
                  <button
                    className="btn btn-outline-primary"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                    value="Apple"
                  >
                    Apple
                  </button>,
                  <button
                    className="btn btn-outline-primary"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                    value="Ford"
                  >
                    Ford
                  </button>,
                  <button
                    className="btn btn-outline-primary"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                    value="Nike"
                  >
                    Nike
                  </button>,
                  <button
                    className="btn btn-outline-primary"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                    value="Unilever"
                  >
                    Unilever
                  </button>,
                ],
                <button
                  className="btn btn-outline-danger"
                  onClick={[Function]}
                  type="button"
                >
                  Reset
                </button>,
              ],
              "className": "d-flex flex-row justify-content-between my-flex-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "Apple",
                "nodeType": "host",
                "props": Object {
                  "children": "Apple",
                  "className": "btn btn-outline-primary",
                  "disabled": false,
                  "onClick": [Function],
                  "type": "button",
                  "value": "Apple",
                },
                "ref": null,
                "rendered": "Apple",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": "Ford",
                "nodeType": "host",
                "props": Object {
                  "children": "Ford",
                  "className": "btn btn-outline-primary",
                  "disabled": false,
                  "onClick": [Function],
                  "type": "button",
                  "value": "Ford",
                },
                "ref": null,
                "rendered": "Ford",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": "Nike",
                "nodeType": "host",
                "props": Object {
                  "children": "Nike",
                  "className": "btn btn-outline-primary",
                  "disabled": false,
                  "onClick": [Function],
                  "type": "button",
                  "value": "Nike",
                },
                "ref": null,
                "rendered": "Nike",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": "Unilever",
                "nodeType": "host",
                "props": Object {
                  "children": "Unilever",
                  "className": "btn btn-outline-primary",
                  "disabled": false,
                  "onClick": [Function],
                  "type": "button",
                  "value": "Unilever",
                },
                "ref": null,
                "rendered": "Unilever",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Reset",
                  "className": "btn btn-outline-danger",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": "Reset",
                "type": "button",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Please select a user
          </h2>,
          <div
            className="row"
          >
            <div
              className="col-md-5"
            >
              <div
                className="d-flex flex-row justify-content-between my-flex-container"
              >
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Apple"
                >
                  Apple
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Ford"
                >
                  Ford
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Nike"
                >
                  Nike
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Unilever"
                >
                  Unilever
                </button>
                <button
                  className="btn btn-outline-danger"
                  onClick={[Function]}
                  type="button"
                >
                  Reset
                </button>
              </div>
            </div>
          </div>,
          <br />,
          undefined,
          <br />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Please select a user",
          },
          "ref": null,
          "rendered": "Please select a user",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-md-5"
            >
              <div
                className="d-flex flex-row justify-content-between my-flex-container"
              >
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Apple"
                >
                  Apple
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Ford"
                >
                  Ford
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Nike"
                >
                  Nike
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Unilever"
                >
                  Unilever
                </button>
                <button
                  className="btn btn-outline-danger"
                  onClick={[Function]}
                  type="button"
                >
                  Reset
                </button>
              </div>
            </div>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="d-flex flex-row justify-content-between my-flex-container"
              >
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Apple"
                >
                  Apple
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Ford"
                >
                  Ford
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Nike"
                >
                  Nike
                </button>
                <button
                  className="btn btn-outline-primary"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                  value="Unilever"
                >
                  Unilever
                </button>
                <button
                  className="btn btn-outline-danger"
                  onClick={[Function]}
                  type="button"
                >
                  Reset
                </button>
              </div>,
              "className": "col-md-5",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  Array [
                    <button
                      className="btn btn-outline-primary"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                      value="Apple"
                    >
                      Apple
                    </button>,
                    <button
                      className="btn btn-outline-primary"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                      value="Ford"
                    >
                      Ford
                    </button>,
                    <button
                      className="btn btn-outline-primary"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                      value="Nike"
                    >
                      Nike
                    </button>,
                    <button
                      className="btn btn-outline-primary"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                      value="Unilever"
                    >
                      Unilever
                    </button>,
                  ],
                  <button
                    className="btn btn-outline-danger"
                    onClick={[Function]}
                    type="button"
                  >
                    Reset
                  </button>,
                ],
                "className": "d-flex flex-row justify-content-between my-flex-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "Apple",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Apple",
                    "className": "btn btn-outline-primary",
                    "disabled": false,
                    "onClick": [Function],
                    "type": "button",
                    "value": "Apple",
                  },
                  "ref": null,
                  "rendered": "Apple",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": "Ford",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Ford",
                    "className": "btn btn-outline-primary",
                    "disabled": false,
                    "onClick": [Function],
                    "type": "button",
                    "value": "Ford",
                  },
                  "ref": null,
                  "rendered": "Ford",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": "Nike",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Nike",
                    "className": "btn btn-outline-primary",
                    "disabled": false,
                    "onClick": [Function],
                    "type": "button",
                    "value": "Nike",
                  },
                  "ref": null,
                  "rendered": "Nike",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": "Unilever",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Unilever",
                    "className": "btn btn-outline-primary",
                    "disabled": false,
                    "onClick": [Function],
                    "type": "button",
                    "value": "Unilever",
                  },
                  "ref": null,
                  "rendered": "Unilever",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Reset",
                    "className": "btn btn-outline-danger",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Reset",
                  "type": "button",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
